// Generic styles. Keep this file below 300 lines.
html,
body {
    height: auto;
    margin: 0;
    padding: 0;
    zoom: 1;
}

body {
    color: $primary-color;

    // Bulma label class override.
    .label {
        color: $primary-color;
        font-weight: 500;
    }

    .rounded-button {
        border-radius: 100%;
        padding: $spacer * 2;
        transition: all 300ms ease;

        &:hover {
            cursor: pointer;
        }
    }

    .button {
        font-size: 1rem;
        font-weight: bold;
        line-height: none;
    }
}

input {
    &[type="text"] {
        height: $spacer * 5;
    }
}

video {
    display: none;
}

* {
    box-sizing: border-box;
    outline: none;
}

::selection {
    background: $brand-color;
    color: $white;
}

.hide {display: none;}

.list-items {
    background: lighten($grey-color-lighter, 1%);

    .list-item {
        align-items: center;
        display: flex;
        justify-content: space-between;
        padding: 8px;

        .status-icon {
            align-items: center;
            display: flex;
            height: $spacer * 6;
            justify-content: center;
            width: $spacer * 6;
        }

        .info {
            flex-grow: 1;

            .name {
                font-weight: 500;
            }

            .description {
                color: $grey-color-darker;
            }
        }

        &:nth-child(even) {background: $grey-color-lightest;}
        &:nth-child(odd) {background: $grey-color-lighter;}

        &:hover {
            &:nth-child(even) {background: lighten($grey-color-lightest, 1%);}
            &:nth-child(odd) {background: lighten($grey-color-lighter, 1%);}
        }

        .list-item-options {
            align-items: center;
            display: flex;
        }

        .rounded-button {
            background: $white;
            box-shadow: 0 2px 0 rgba(0, 0, 0, 0.1);
            height: $spacer * 4;
            line-height: 32px;
            padding: 0;
            text-align: center;
            width: $spacer * 4;

            &:hover {
                background: $brand-color;
                color: #fff;
                cursor: pointer;
            }
        }
    }
}

.decorated-list {
    li {
        &::before {
            color: $brand-color;
            content: "• ";
        }
    }
}

.tabs {
    height: $spacer * 7;
    margin-bottom: 0;

    ul {
        display: flex;
        justify-content: space-between;

        li {
            flex-grow: 1;
        }
    }

    a {
        height: $spacer * 7;
    }
}

.tab {
    display: none;
    margin-bottom: $spacer * 2;

    &.is-active {
        display: block;
    }
}

// A general icon popping up against a white content background.
.content-icon {
    color: $brand-color;
    font-size: 12px;

    &:hover {
        color: $brand-variation-color;
        cursor: pointer;
    }
}

.styled-list {
    li {
        &::before {
            color: $brand-color;
            content: "• ";
        }

    }
}

.help {
    .warning {
        color: $brand-variation-color;
        font-weight: bold;
    }
}

@include keyframes(hint-pulse) {
    0%  {
        background-color: rgba(255, 255, 255, 0);
        color: $white;
    }

    50% {background-color: rgba(255, 255, 255, 0.2);}

    100% {
        background-color: rgba(255, 255, 255, 0);
        color: $white;
    }
}


@include keyframes(hint-pulse-active) {
    0%  {
        background-color: rgba(255, 255, 255, 0.6);
        color: $brand-variation-color;
    }

    50% {background-color: rgba(255, 255, 255, 1);}

    100% {
        background-color: rgba(255, 255, 255, 0.6);
        color: $brand-variation-color;
    }
}


// Recommended css code for vue-svgicon.
.svg-icon {
    color: inherit;
    display: inline-block;
    fill: none;
    height: 1rem;
    stroke: currentColor;
    vertical-align: middle;
    width: 1rem;
}

.svg-fill {
    fill: currentColor;
    stroke: none;
}

.svg-up {
    transform: rotate(0deg);
}

.svg-right {
    transform: rotate(90deg);
}

.svg-down {
    transform: rotate(180deg);
}

.svg-left {
    transform: rotate(-90deg);
}

.spinner {
    -moz-animation: spin 0.75s linear infinite;
    animation: spin 0.75s linear infinite;
}



@-moz-keyframes spin { 100% { -moz-transform: rotate(360deg); } }
@-webkit-keyframes spin { 100% { -webkit-transform: rotate(360deg); } }
@keyframes spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }
