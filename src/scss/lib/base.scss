// Generic styles. Keep this file below 300 lines.
html,
body {
    height: auto;
    margin: 0;
    padding: 0;
    zoom: 1;

    &.extension {
        width: $max-popup-width;
    }
}

body {
    color: $primary-color;

    component {
        display: block;
    }

    // Bulma label class override.
    .label {
        color: $primary-color;
        font-weight: 500;
    }

    .rounded-button {
        border-radius: 100%;
        padding: $spacer * 2;
        transition: all 300ms ease;

        &:hover {
            cursor: pointer;
        }
    }

    .button {
        font-size: 1rem;
        font-weight: 500;
        line-height: none;
    }

    textarea,
    .input {
        box-shadow: none;

        &:focus,
        &:active {
            border: 1px solid $brand-color;
            box-shadow: 0 0 1px 1px rgba($brand-color, 0.3);
        }

        &[type="text"] {
            height: $spacer * 5;
        }
    }

    .switch[type="checkbox"] {
        & + label {
            font-weight: 500;
        }

        &:checked + label {
            &::before {
                background: $green-color;
            }
        }
    }
}

// A generic link class that can be used on non-html elements
// that function like a link.
.link {
    &:hover {
        color: $brand-color;
        cursor: pointer;
    }
}

video {
    display: none;
}

* {
    box-sizing: border-box;
    outline: none;
}

::selection {
    background: $brand-color;
    color: $white;
}

.hide {display: none;}

.list-items {
    background: lighten($grey-color-lighter, 1%);

    .list-item {
        align-items: center;
        display: flex;
        justify-content: space-between;
        padding: 8px;

        .status-icon {
            @include icon-size($spacer * 6);
            align-items: center;
            display: flex;
            justify-content: center;
        }

        .info {
            flex-grow: 1;

            .name {
                font-weight: 500;
            }

            .description {
                color: $grey-color-darker;
            }
        }

        &:nth-child(even) {background: $grey-color-lightest;}
        &:nth-child(odd) {background: $grey-color-lighter;}

        &:hover {
            &:nth-child(even) {background: lighten($grey-color-lightest, 1%);}
            &:nth-child(odd) {background: lighten($grey-color-lighter, 1%);}
        }

        .list-item-options {
            align-items: center;
            display: flex;
        }

        .rounded-button {
            @include icon-size($spacer * 4);
            background: $white;
            box-shadow: 0 2px 0 rgba(0, 0, 0, 0.1);
            line-height: 32px;
            padding: 0;
            text-align: center;

            &:hover {
                background: $brand-color;
                color: #fff;
                cursor: pointer;
            }
        }
    }
}

.vertical-devider {
    background: $grey-color-light;
    height: $spacer * 3;
    margin: 0 $spacer;
    width: 2px;
}
